package main

#load_all "./src"
use dom {*}
use events {*}
use head {*}
use reactive {*}
use style {*}
use view {*}

use core.misc {*}
use core.js



ext_html :: #compiler_extension "./ext/html.onyx" {
    new_html_element
}

ext_html.new_html_element!{a, abbr, address, area, article, aside, audio, b, base, bdi, bdo, blockquote, body, br, button, canvas, caption, cite, code, col, colgroup, data, datalist, dd, del, details, dfn, dialog, div, dl, dt, em, embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html, i, iframe, img, input, ins, kbd, keygen, label, legend, li, link, map, mark, menu, menuitem, meta, meter, nav, noscript, object, ol, optgroup, option, output, p, param, picture, pre, progress, q, rp, rt, ruby, s, samp, script, section, select, small, source, span, strong, style, sub, summary, sup, table, tbody, td, textarea, tfoot, th, thead, time, title, tr, track, u, ul, var, video, wbr}


Signal(i32).increment :: (self: #Self) {
    self->set(self->get() + 1)
}

Signal(i32).decrement :: (self: #Self) {
    self->set(self->get() - 1)
}



main :: () {

    count := signal(0)

    main_view :=
        div(class="main")(
            h1(
                "Count: ", count
            )
            button(
                "Increment"
            ) |> click(([count]) => count->increment())
            button(
                "Decrement"
            ) |> click(([count]) => count->decrement())
        )

    main_view |> append(get_body())

} 






