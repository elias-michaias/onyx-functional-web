use core.js

get_dom :: () => {
    return js.Global->get("document");
}

create :: (dom: $T, new_el: str = "div") -> T {
    el := dom->call("createElement", new_el);
    return el;
}

get_id :: (dom: $T, new_el: str) -> T {
    el := dom->call("getElementById", new_el);
    return el;
}

append :: (el: $T, target: $R = "body") -> T {
    dom := js.Global->get("document");
    dom->get(target)->call("appendChild", el);
    return el;
}

grab :: (el: $T, target: T) -> T {
    dom := js.Global->get("document");
    dom->get(el)->call("appendChild", target);
    return el;
}

inner :: (el: $T, html: $R) -> T {
    el->set("innerHTML", html);
    return el;
}

alert :: (msg: str) {
    js.Global->call("alert", msg);
}

click :: (el: $T, func: (T) -> $R) -> #auto {
    el->call("addEventListener", "click", js.func((this, args, [func]) => {
        func(this);
        return js.Undefined;
    }));
    return el;
}

main :: () {

    DOM := get_dom();

    x := 0;

    DOM 
    |> create("button") 
    |> append()
    |> inner(x)
    |> click((el, [x]) => {
        x+=1;
        el |> inner(x);
    });

    DOM
    |> get_id("grabbable")
    |> click((el) => {
        el |> inner("I was clicked!");
    });
}