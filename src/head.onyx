package head

#load "./dom.onyx"
use dom{*}

use core.js
use core {
    tprintf
}


/// Sets the meta tag with the specified name and content.
/// If a meta tag with the same name already exists, its content will be updated.
/// - `name`: The name attribute of the meta tag.
/// - `content`: The content attribute of the meta tag.
set_meta :: (name: str, content: str) {
    _meta := get_head()
    |> query_attr("name", name);
    if _meta->is_null() {
        meta := get_dom()
        |> create("meta")
        |> set_attr("name", name)
        |> set_attr("content", content)
        |> prepend(get_head());
    } else {
        _meta
        |> set_attr("content", content);
    }
}

/// Retrieves the content of the meta tag with the specified name.
/// If the meta tag does not exist, an empty string is returned.
/// - `name`: The name attribute of the meta tag.
get_meta :: (name: str) -> str {
    _meta := get_head()
    |> query_attr("name", name);
    if _meta->is_null() {
        return "";
    } else {
        return _meta |> get_attr("content");
    }
}

/// Removes the meta tag with the specified name.
/// - `name`: The name attribute of the meta tag.
remove_meta :: (name: str) {
    _meta := get_head()
    |> query_attr("name", name);
    if !_meta->is_null() {
        _meta |> remove();
    }
}

/// Sets the title of the HTML document.
/// If a title tag already exists, its content will be updated.
/// - `title`: The title of the HTML document.
set_title :: (title: str) {
    _title := get_head()
    |> query("title");
    if _title->is_null() {
        __title := get_dom()
        |> create("title")
        |> set_inner(title)
        |> prepend(get_head());
    } else {
        _title
        |> set_inner(title);
    }
}

/// Retrieves the content of the title tag of the HTML document.
/// If the title tag does not exist, an empty string is returned.
get_title :: () -> str {
    _title := get_head()
    |> query("title");
    if _title->is_null() {
        return "";
    } else {
        return _title |> get_inner();
    }
}